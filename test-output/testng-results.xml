<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="RegressionSuite" duration-ms="2299" started-at="2019-03-02T14:03:10Z" finished-at="2019-03-02T14:03:12Z">
    <groups>
      <group name="abc">
        <method signature="RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="enterFirstNameAndLastNameTest" class="tests.RegistrationTests"/>
      </group> <!-- abc -->
    </groups>
    <test name="RegistrationPageRegressionTests" duration-ms="2299" started-at="2019-03-02T14:03:10Z" finished-at="2019-03-02T14:03:12Z">
      <class name="tests.RegistrationTests">
        <test-method status="PASS" signature="initialSetUp(org.testng.ITestContext)[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="initialSetUp" is-config="true" duration-ms="17257" started-at="2019-03-02T19:32:53Z" finished-at="2019-03-02T19:33:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@23c966e7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="beforeMethod" is-config="true" duration-ms="16" started-at="2019-03-02T19:33:10Z" finished-at="2019-03-02T19:33:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.enterFirstNameAndLastNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="enterFirstNameAndLastNameTest" duration-ms="601" started-at="2019-03-02T19:33:10Z" description="This test case is to verify that the firstname and lastname is entered." finished-at="2019-03-02T19:33:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [firstname] but found [FirstName]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [firstname] but found [FirstName]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at tests.RegistrationTests.enterFirstNameAndLastNameTest(RegistrationTests.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at utilities.TestNGRunner.main(TestNGRunner.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:294)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterFirstNameAndLastNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="afterMethod" is-config="true" duration-ms="554" started-at="2019-03-02T19:33:10Z" finished-at="2019-03-02T19:33:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterFirstNameAndLastNameTest status=FAILURE method=RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@1c3c4790] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="beforeMethod" is-config="true" duration-ms="16" started-at="2019-03-02T19:33:11Z" finished-at="2019-03-02T19:33:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectMaleRadioButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectMaleRadioButtonTest()[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="selectMaleRadioButtonTest" duration-ms="248" started-at="2019-03-02T19:33:11Z" description="This test case verifies whether the Male radio button is selected." finished-at="2019-03-02T19:33:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMaleRadioButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="afterMethod" is-config="true" duration-ms="4" started-at="2019-03-02T19:33:11Z" finished-at="2019-03-02T19:33:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMaleRadioButtonTest status=SUCCESS method=RegistrationTests.selectMaleRadioButtonTest()[pri:0, instance:tests.RegistrationTests@1c3c4790] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-02T19:33:11Z" finished-at="2019-03-02T19:33:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectAHobbyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="selectAHobbyTest" duration-ms="398" started-at="2019-03-02T19:33:11Z" description="This test case verifies whether the Automation Tester check box is selected." finished-at="2019-03-02T19:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAHobbyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-03-02T19:33:12Z" finished-at="2019-03-02T19:33:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectCountryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-03-02T19:33:12Z" finished-at="2019-03-02T19:33:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAHobbyTest status=SUCCESS method=RegistrationTests.selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@1c3c4790] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="selectCountryTest()[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="selectCountryTest" duration-ms="427" started-at="2019-03-02T19:33:12Z" description="This test case verifies whether the country is selected." finished-at="2019-03-02T19:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountryTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-03-02T19:33:12Z" finished-at="2019-03-02T19:33:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountryTest status=SUCCESS method=RegistrationTests.selectCountryTest()[pri:0, instance:tests.RegistrationTests@1c3c4790] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="quitBrowser()[pri:0, instance:tests.RegistrationTests@1c3c4790]" name="quitBrowser" is-config="true" duration-ms="1227" started-at="2019-03-02T19:33:12Z" finished-at="2019-03-02T19:33:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.RegistrationTests -->
    </test> <!-- RegistrationPageRegressionTests -->
  </suite> <!-- RegressionSuite -->
</testng-results>
