<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
    <line>
      <![CDATA[Running ..RegressionSuite]]>
    </line>
    <line>
      <![CDATA[Entered firstname]]>
    </line>
    <line>
      <![CDATA[enterFirstNameAndLastNameTestis Failed.]]>
    </line>
    <line>
      <![CDATA[Failed screenshot saved in the location C:\Users\Vivek\workspace\Selenium\Screenshots\enterFirstNameAndLastNameTest1549986440332.png]]>
    </line>
    <line>
      <![CDATA[Selected Male Radio button]]>
    </line>
    <line>
      <![CDATA[selectMaleRadioButtonTest is Passed.]]>
    </line>
    <line>
      <![CDATA[Clicked automationTesterCheckBox]]>
    </line>
    <line>
      <![CDATA[selectAHobbyTest is Passed.]]>
    </line>
    <line>
      <![CDATA[selectCountryTest is Passed.]]>
    </line>
  </reporter-output>
  <suite name="RegressionSuite" duration-ms="5008" started-at="2019-02-12T15:47:16Z" finished-at="2019-02-12T15:47:21Z">
    <groups>
      <group name="abc">
        <method signature="RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@68c4039c]" name="enterFirstNameAndLastNameTest" class="tests.RegistrationTests"/>
      </group> <!-- abc -->
    </groups>
    <test name="RegistrationPageRegressionTests" duration-ms="5008" started-at="2019-02-12T15:47:16Z" finished-at="2019-02-12T15:47:21Z">
      <class name="tests.RegistrationTests">
        <test-method status="PASS" signature="initialSetUp(org.testng.ITestContext)[pri:0, instance:tests.RegistrationTests@68c4039c]" name="initialSetUp" is-config="true" duration-ms="49633" started-at="2019-02-12T21:16:27Z" finished-at="2019-02-12T21:17:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@29876704]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Running ..RegressionSuite]]>
            </line>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@68c4039c]" name="beforeMethod" is-config="true" duration-ms="7" started-at="2019-02-12T21:17:17Z" finished-at="2019-02-12T21:17:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.enterFirstNameAndLastNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@68c4039c]" name="enterFirstNameAndLastNameTest" duration-ms="2420" started-at="2019-02-12T21:17:17Z" description="This test case is to verify that the firstname and lastname is entered." finished-at="2019-02-12T21:17:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [firstname] but found [FirstName]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [firstname] but found [FirstName]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at tests.RegistrationTests.enterFirstNameAndLastNameTest(RegistrationTests.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Entered firstname]]>
            </line>
          </reporter-output>
        </test-method> <!-- enterFirstNameAndLastNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@68c4039c]" name="afterMethod" is-config="true" duration-ms="872" started-at="2019-02-12T21:17:19Z" finished-at="2019-02-12T21:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterFirstNameAndLastNameTest status=FAILURE method=RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@68c4039c] output=Entered firstname]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[enterFirstNameAndLastNameTestis Failed.]]>
            </line>
            <line>
              <![CDATA[Failed screenshot saved in the location C:\Users\Vivek\workspace\Selenium\Screenshots\enterFirstNameAndLastNameTest1549986440332.png]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@68c4039c]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2019-02-12T21:17:20Z" finished-at="2019-02-12T21:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectMaleRadioButtonTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectMaleRadioButtonTest()[pri:0, instance:tests.RegistrationTests@68c4039c]" name="selectMaleRadioButtonTest" duration-ms="427" started-at="2019-02-12T21:17:20Z" description="This test case verifies whether the Male radio button is selected." finished-at="2019-02-12T21:17:21Z">
          <reporter-output>
            <line>
              <![CDATA[Selected Male Radio button]]>
            </line>
          </reporter-output>
        </test-method> <!-- selectMaleRadioButtonTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@68c4039c]" name="afterMethod" is-config="true" duration-ms="2" started-at="2019-02-12T21:17:21Z" finished-at="2019-02-12T21:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMaleRadioButtonTest status=SUCCESS method=RegistrationTests.selectMaleRadioButtonTest()[pri:0, instance:tests.RegistrationTests@68c4039c] output=Selected Male Radio button]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[selectMaleRadioButtonTest is Passed.]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@68c4039c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-02-12T21:17:21Z" finished-at="2019-02-12T21:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectAHobbyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@68c4039c]" name="selectAHobbyTest" duration-ms="159" started-at="2019-02-12T21:17:21Z" description="This test case verifies whether the Automation Tester check box is selected." finished-at="2019-02-12T21:17:21Z">
          <reporter-output>
            <line>
              <![CDATA[Clicked automationTesterCheckBox]]>
            </line>
          </reporter-output>
        </test-method> <!-- selectAHobbyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@68c4039c]" name="afterMethod" is-config="true" duration-ms="2" started-at="2019-02-12T21:17:21Z" finished-at="2019-02-12T21:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAHobbyTest status=SUCCESS method=RegistrationTests.selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@68c4039c] output=Clicked automationTesterCheckBox]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[selectAHobbyTest is Passed.]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@68c4039c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-02-12T21:17:21Z" finished-at="2019-02-12T21:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectCountryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectCountryTest()[pri:0, instance:tests.RegistrationTests@68c4039c]" name="selectCountryTest" duration-ms="721" started-at="2019-02-12T21:17:21Z" description="This test case verifies whether the country is selected." finished-at="2019-02-12T21:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountryTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@68c4039c]" name="afterMethod" is-config="true" duration-ms="4" started-at="2019-02-12T21:17:21Z" finished-at="2019-02-12T21:17:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountryTest status=SUCCESS method=RegistrationTests.selectCountryTest()[pri:0, instance:tests.RegistrationTests@68c4039c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[selectCountryTest is Passed.]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="quitBrowser()[pri:0, instance:tests.RegistrationTests@68c4039c]" name="quitBrowser" is-config="true" duration-ms="4184" started-at="2019-02-12T21:17:22Z" finished-at="2019-02-12T21:17:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.RegistrationTests -->
    </test> <!-- RegistrationPageRegressionTests -->
  </suite> <!-- RegressionSuite -->
</testng-results>
